datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  Id    Int    @id
  Email String @unique
  Name  String
  Wallet String?
  transactions MarketplaceTransaction[]
  courseProgresses CourseProgress[]


}

model Course {
  id    Int    @id @default(autoincrement())
  title String
  transactions MarketplaceTransaction[]
  modules      Module[]
  courseProgresses CourseProgress[]
}

model MarketplaceTransaction {
  id              Int    @id @default(autoincrement())
  buyerId         Int
  courseId        Int
  amount          Int
  currency        String
  transactionHash String?
  status          String  @default("Pending")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  buyer  Users   @relation(fields: [buyerId], references: [Id])
  course Course @relation(fields: [courseId], references: [id])
}

model Module {
  id          Int      @id @default(autoincrement())
  courseId    Int
  name        String
  position    Int
  description String?
  lessons     Lesson[]
  
  course      Course   @relation(fields: [courseId], references: [id])
}

model Lesson {
  id            Int          @id @default(autoincrement())
  moduleId      Int
  name          String
  type          String
  content       String?
  estimatedTime String?
  position      Int
  
  module        Module       @relation(fields: [moduleId], references: [id])
  videoLesson   VideoLesson?
}

model VideoLesson {
  lessonId   Int     @id
  videoURL   String
  
  lesson     Lesson  @relation(fields: [lessonId], references: [id])
}


model CourseProgress {
user_id       Int
course_id     Int
progress      Int      @default(0)
completed     Boolean  @default(false)
last_accessed_at DateTime @default(now())

user          Users    @relation(fields: [user_id], references: [Id])
course        Course   @relation(fields: [course_id], references: [id])

@@id([user_id, course_id])
}