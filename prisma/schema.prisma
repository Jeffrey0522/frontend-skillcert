datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  transactions MarketplaceTransaction[]
}

model Course {
  id    Int    @id @default(autoincrement())
  title String
  transactions MarketplaceTransaction[]
  modules      Module[]  // Added the opposite relation
}

model MarketplaceTransaction {
  id              Int    @id @default(autoincrement())
  buyerId         Int
  courseId        Int
  amount          Int
  currency        String
  transactionHash String?
  status          String  @default("Pending")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  buyer  User   @relation(fields: [buyerId], references: [id])
  course Course @relation(fields: [courseId], references: [id])
}

model Module {
  id          Int      @id @default(autoincrement())  // Changed from BigInt to Int
  courseId    Int      // Changed from BigInt to Int
  name        String
  position    Int
  description String?
  status      String   @default("ACTIVE")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  course      Course   @relation(fields: [courseId], references: [id])
  lessons     Lesson[]
  
  @@index([courseId])
}

model Lesson {
  id            Int      @id @default(autoincrement())  // Changed from BigInt to Int
  moduleId      Int      // Changed from BigInt to Int
  name          String
  type          String
  content       String?
  estimatedTime String?
  position      Int
  
  module        Module   @relation(fields: [moduleId], references: [id])
  
  @@index([moduleId])
}